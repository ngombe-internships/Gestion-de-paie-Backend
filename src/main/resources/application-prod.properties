

# ----------------------------------
# 1. Configuration du serveur
# ----------------------------------

server.port=${PORT:8080}
server.address=0.0.0.0

# ----------------------------------
# 2. Configuration de la base de donnee PostgreSQL


# Votre configuration actuelle est valide pour Render, mais expose les identifiants dans le code source.
spring.datasource.url=jdbc:postgresql://dpg-d1qc4rbuibrs73eigpag-a.oregon-postgres.render.com:5432/hades_kkvc?sslmode=require
spring.datasource.username=hades_kkvc_user
spring.datasource.password=OIy6rIrFGhqpNJxifa1u4Xh5TXtLLWtd
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuration SSL specifique Render pour eviter les erreurs de connexion.
spring.datasource.hikari.connection-init-sql=SELECT 1


# 3. JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update

# Desactive le formatage SQL et l'affichage des requetes pour des raisons de performance.
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# Specification du dialecte pour PostgreSQL.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


# 4. JWT (Configuration securise)

app.jwt-secret=${JWT_SECRET_KEY}
app.jwt-expiration-milliseconds=86400000


# 5. Logging (Optimisï¿½ pour la production)

logging.level.com.hades.blog.filter=INFO
logging.level.com.hades.blog.service.JwtService=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN



# Permet d'exposer les endpoints de sant pour la supervision.
management.endpoints.web.exposure.include=health

#cloudina
cloudinary.cloud_name=dfurjzy3b
cloudinary.api_key=822931638535691
cloudinary.api_secret=6zyFl5vn9iCoWNrrt4OMl_QEci0
debug=true
# Taille maximale des fichiers
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# Pour avoir les erreurs Thymeleaf detailles (avec lignes)
logging.level.org.thymeleaf=TRACE
logging.level.org.thymeleaf.templatemode=TRACE

# Optionnel : desactive le cache Thymeleaf pour voir immediatement les changements
spring.thymeleaf.cache=false


# application.properties
spring.mvc.converters.preferred-json-mapper=jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.jackson.default-property-inclusion=non_null
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.media-types.json=application/json
spring.mvc.contentnegotiation.default-content-type=application/json
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=UTC
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=false
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false


# Configuration Hibernate pour les LOB
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.connection.handling_mode=delayed_acquisition_and_release_after_transaction



# Configuration de l'envoi d'e-mails avec serveur messagerie
spring.mail.host=mail.ngombe.org
spring.mail.port=465
spring.mail.username=maalipo@ngombe.org
spring.mail.password=votre_mot_de_passe_ici
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=mail.ngombe.org
spring.mail.properties.mail.transport.protocol=smtp
# Timeouts et sécurité
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
#spring.mail.properties.mail.smtp.ssl.checkserveridentity=false


app.frontend.password-reset-url=${FRONTEND_URL}